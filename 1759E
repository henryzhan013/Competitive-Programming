#include <iostream>
#include <algorithm>
 
using namespace std;
const int N=200000;
int a[N+10],n;
 
int dp(long long p, int g, int b, int start){
    int count=0,index=start;
    while(p>a[index] && index<n){
        p+=a[index]/2;
        index++;
        count++;
    }
    if(index==n){
        return count;
    }
    if(g>0 && b>0){
        int op1=count+dp(p*2,g-1,b,index);
        int op2=count+dp(p*3,g,b-1,index);
        return max(op1,op2);
    }else if(g>0 && b==0){
        return count+dp(p*2,g-1,b,index);
    }else if(g==0 && b>0){
        return count+dp(p*3,g,b-1,index);
    }else{
        return count;
    }
}
 
void solve(){
    int h;
    cin>>n>>h;
    for(int i=0;i<n;i++){
        cin>>a[i];
    }
    sort(a,a+n);
    cout<<dp(h*1ll,2,1,0)<<endl;
}
 
int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
