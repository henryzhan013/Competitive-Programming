#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <stack>
#include <queue>
#include <math.h>
#include <iomanip>
 
typedef long long ll;
#define yes cout<<"Yes\n"
#define no cout<<"No\n"
#define endl "\n"
using namespace std;
 
ll gcd(ll a, ll b) {
    while (b != 0) {
        ll temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}
 
const int MOD = 998244353;
 
int add(int x, int y)
{
    return ((x + y) % MOD + MOD) % MOD;
}
 
int mul(int x, int y)
{
    return x * 1ll * y % MOD;
}
 
int binpow(int x, int y)
{
    int z = 1;
    while(y)
    {
        if(y % 2 == 1) z = mul(z, x);
        x = mul(x, x);
        y /= 2;
    }
    return z;
}
 
int inv(int x)
{
    return binpow(x, MOD - 2);
}
 
int divide(int x, int y)
{
    return mul(x, inv(y));
}
 
vector<int> findAllDivisors(int n) {
    vector<int> divisors;
    for (int i = 1; i * i <= n; ++i) {
        if (n % i == 0) {
            divisors.push_back(i);
            if (i != n / i) { // Check to avoid adding the square root twice
                divisors.push_back(n / i);
            }
        }
    }
    return divisors;
}
 
 
void solve(){
    ll n;
    cin>>n;
    vector<ll> a(n+1);
    for(ll i=1;i<=n;++i) cin>>a[i];
    bool as=true, des=true;
    for(ll i=2;i<=n;++i){
        if(a[i]<a[i-1]){
            as=false;
        }
        if(a[i]>a[i-1]){
            des=false;
        }
    }
    if(as){
        cout<<0<<endl;
        return;
    }
    if(des){
        cout<<1<<endl;
        return;
    }
    if(a[1]<a[n]){
        ll l1=1, l2=0;
        bool flag=true;
        for(ll i=2;i<=n;++i){
            if(a[i]>a[i-1]){
                if(flag){
                    flag=false;
                    l2++;
                }else{
                    cout<<-1<<endl;
                    return;
                }
            }else{
                if(flag){
                    l1++;
                }else{
                    l2++;
                }
            }
        }
        cout<<min(l1,l2)+1<<endl;
    }else if(a[1]>a[n]){
        ll l1=1, l2=0;
        bool flag=true;
        for(ll i=2;i<=n;++i){
            if(a[i]<a[i-1]){
                if(flag){
                    flag=false;
                    l2++;
                }else{
                    cout<<-1<<endl;
                    return;
                }
            }else{
                if(flag){
                    l1++;
                }else{
                    l2++;
                }
            }
        }
        cout<<min(l1+2,l2)<<endl;
    }else{
        ll ans1, ans2;
        bool ok1=true, ok2=true;
        ll l1=1, l2=0;
        bool flag=true;
        for(ll i=2;i<=n;++i){
            if(a[i]>a[i-1]){
                if(flag){
                    flag=false;
                    l2++;
                }else{
                    ok1=false;
                    break;
                }
            }else{
                if(flag){
                    l1++;
                }else{
                    l2++;
                }
            }
        }
        if(ok1) ans1=min(l1,l2)+1;
        l1=1; l2=0;flag=true;
        for(ll i=2;i<=n;++i){
            if(a[i]<a[i-1]){
                if(flag){
                    flag=false;
                    l2++;
                }else{
                    ok2=false;
                    break;
                }
            }else{
                if(flag){
                    l1++;
                }else{
                    l2++;
                }
            }
        }
        if(ok2) ans2=min(l1+2, l2);
        if(ok1 && ok2){
            cout<<min(ans1,ans2)<<endl;
        }else if(ok1 && (!ok2)){
            cout<<ans1<<endl;
        }else if(ok2 && (!ok1)){
            cout<<ans2<<endl;
        }else{
            cout<<-1<<endl;
        }
    }
}
 
 
int32_t main(){
 
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
