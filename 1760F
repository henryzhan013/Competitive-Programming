#include <iostream>
#include <algorithm>
 
using namespace std;

typedef long long ll;
const ll N=200000;
ll a[N+5], pref[N+5];
ll n,c,d;

bool check(ll k){
    ll max;
    if(k+1<=n){
        ll remain=d%(k+1);
        max=d/(k+1)*pref[k+1]+pref[min(n,remain)];
    }else{
        ll remain=d%(k+1);
        max=d/(k+1)*pref[n]+pref[min(n,remain)];
    }
    return max>=c;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        memset(a,0,sizeof(a));
        memset(pref,0,sizeof(pref));
        cin>>n>>c>>d;
        for(ll i=1;i<=n;i++){
            cin>>a[i];
        }
        sort(a+1, a+n+1, greater<ll>());
        for(ll i=1;i<=n;i++){
            pref[i]=pref[i-1]+a[i];
        }
     
        if(d*a[1]<c){
            cout<<"Impossible"<<endl;
            continue;
        }else {
            bool flag=false;
            for(ll i=1;i<=min(n,d);i++){
                if(pref[i]>=c){
                    cout<<"Infinity"<<endl;
                    flag=true;
                    break;
                }
            }
            if(flag) continue;
        }
        
        ll low=0,high=N+5;
        while(low<=high){
            ll mid=(low+high)/2;
            if(check(mid)){
                low=mid+1;
            }else{
                high=mid-1;
            }
        }
        cout<<high<<endl;
      //  cout<<check(200005);
    }
    
    return 0;
}
